# ===================================================================
# CONFIGURACIÓN DE TEST
# ===================================================================
# Configuración específica para tests con Testcontainers

# Nombre de la aplicación
spring.application.name=hexarch-test

# ===================================================================
# CONFIGURACIÓN DE BASE DE DATOS
# ===================================================================
# Estas propiedades serán sobrescritas dinámicamente por Testcontainers
# en cada test usando @DynamicPropertySource
spring.datasource.driver-class-name=org.postgresql.Driver

# ===================================================================
# CONFIGURACIÓN DE JPA / HIBERNATE
# ===================================================================
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate

# Mostrar SQL en tests (útil para debugging)
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# ===================================================================
# CONFIGURACIÓN DE FLYWAY
# ===================================================================
# Habilitar Flyway para tests (ejecuta migraciones en la BD de test)
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# ===================================================================
# CONFIGURACIÓN DE LOGGING
# ===================================================================
# Nivel de log reducido para tests
logging.level.root=WARN
logging.level.com.example.hexarch=INFO
logging.level.org.springframework.test=INFO
logging.level.org.testcontainers=INFO

# ===================================================================
# CONFIGURACIÓN DE JACKSON
# ===================================================================
# Instant se serializa automáticamente a ISO-8601 con UTC
spring.jackson.serialization.write-dates-as-timestamps=false

# ===================================================================
# CONFIGURACIÓN DE EMAIL SERVICE
# ===================================================================
# Tasa de fallos del EmailService (0% para tests, 30% en producción)
# Esto evita fallos aleatorios en tests
email.service.failure-rate=0
