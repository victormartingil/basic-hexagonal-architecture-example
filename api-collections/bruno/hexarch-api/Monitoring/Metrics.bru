meta {
  name: Metrics
  type: http
  seq: 3
}

get {
  url: {{baseUrl}}/actuator/metrics
  body: none
  auth: none
}

docs {
  # Application Metrics

  Returns a list of available application metrics using Spring Boot Actuator.

  ## Available Metric Categories
  - **JVM Metrics**: Memory usage, garbage collection, threads
  - **System Metrics**: CPU usage, file descriptors
  - **HTTP Metrics**: Request counts, response times
  - **Database Metrics**: Connection pool status
  - **Tomcat Metrics**: Active sessions, threads

  ## Expected Response
  ```json
  {
    "names": [
      "jvm.memory.used",
      "jvm.gc.pause",
      "http.server.requests",
      "system.cpu.usage",
      "jdbc.connections.active",
      "hikaricp.connections.idle",
      "tomcat.sessions.active.current"
    ]
  }
  ```

  ## Getting Specific Metric Details
  To get details of a specific metric, call:
  `GET {{baseUrl}}/actuator/metrics/{metric.name}`

  Example:
  `GET {{baseUrl}}/actuator/metrics/jvm.memory.used`

  ## Use Cases
  - Performance monitoring
  - Resource usage tracking
  - Capacity planning
  - Troubleshooting performance issues
}

tests {
  test("Status code should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Should have names array", function() {
    expect(res.getBody().names).to.be.an('array');
  });

  test("Should have at least one metric", function() {
    expect(res.getBody().names.length).to.be.greaterThan(0);
  });
}
